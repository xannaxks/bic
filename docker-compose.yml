version: '3.8'

services:
  bic-nextjs:
    build:
      context: ./bic-nextjs
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
    image: bic-nextjs:latest
    container_name: bic-nextjs-prod
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
      # Add your production environment variables here
      # - DATABASE_URL=${DATABASE_URL}
      # - NEXTAUTH_URL=${NEXTAUTH_URL}
      # - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
    volumes:
      # For serving uploaded files or static assets if needed
      - ./bic-nextjs/public:/app/public:ro
    networks:
      - bic-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/health', (r) => {if (r.statusCode !== 200) throw new Error(); process.exit(0)}).on('error', () => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: bic-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/cache:/var/cache/nginx
    depends_on:
      - bic-nextjs
    networks:
      - bic-network
    profiles:
      - with-nginx

networks:
  bic-network:
    driver: bridge

volumes:
  nextjs-cache:
    driver: local